{
	"info": {
		"_postman_id": "b113fa75-6ea2-4569-a841-0e86e2bc44f4",
		"name": "Restful_Booker_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Ping the API",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29e690dd-7863-45d5-9b61-09d0dfa6f971",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201))",
									"",
									"pm.test('Content-Type header is correct', () => pm.response.to.have.header('Content-Type', 'text/plain; charset=utf-8'))"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2b283abb-3d56-451d-b708-5dc6e80211ee",
								"type": "text/javascript",
								"exec": [
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/ping",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get all Bookings",
			"item": [
				{
					"name": "Get all bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f507e6b2-62bb-4495-90cc-c1a2a61a2957",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with all parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								],
								"id": "93288301-162b-4406-8360-c463ea7f8e59"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?firstname=sally&lastname=brown&checkin=2017-11-11&checkout=2017-11-15",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "sally"
								},
								{
									"key": "lastname",
									"value": "brown"
								},
								{
									"key": "checkin",
									"value": "2017-11-11"
								},
								{
									"key": "checkout",
									"value": "2017-11-15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the firstname and last name parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								],
								"id": "f6c83d5b-a590-4066-8b9f-a1e5813bbde0"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?firstname=sally&lastname=brown",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "sally"
								},
								{
									"key": "lastname",
									"value": "brown"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the firstname  parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0afc3c3e-b2fd-4825-aed2-c416c4567d70",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?firstname=sally",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "sally"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the lastname parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								],
								"id": "c678a59e-ebaf-4186-959a-6664174fcd0e"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?lastname=brown",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "lastname",
									"value": "brown"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the checkin parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								],
								"id": "3ccd6744-0e93-4b30-bd14-4d69ae762154"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?checkin=2017-11-11",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": "2017-11-11"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings with the checkout parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								],
								"id": "9b75745f-058a-4570-98c3-dafa52b2443d"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking?checkout=2017-11-11",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkout",
									"value": "2017-11-11"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get a single booking",
			"item": [
				{
					"name": "Get a single booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									"pm.test('Content-Type header is correct', () => pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8'))"
								],
								"id": "f2d2d821-75bc-4efd-b498-8f8658a15f80"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/booking/1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single booking with XML header set",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))"
								],
								"id": "29923ce5-5434-4926-8d87-59056fd9f742"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"url": {
							"raw": "{{baseURL}}/booking/1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single booking dynamically",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "952c2c64-4bf9-4599-ad3c-9b982739a6c0",
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"booking_id\", _.random(1,10))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c77ef485-03dd-4067-b630-637fabe7c96b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"    ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/booking/{{booking_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking",
								"{{booking_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ff35e473-e135-4d6e-88c4-db2a55522072",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b97fb196-e649-4494-b5b3-14e2bd0cf929",
						"type": "text/javascript",
						"exec": [
							"if(pm.response.to.have.header('Content-Type') === 'application/json; charset=utf-8') {",
							"    pm.test(\"Response data format is correct\", () => {",
							"    var jsonData = pm.response.json()",
							"    pm.expect(jsonData.firstname).to.be.a('string')",
							"    pm.expect(jsonData.lastname).to.be.a('string')",
							"    pm.expect(jsonData.totalprice).to.a('number')",
							"    pm.expect(jsonData.depositpaid).to.be.a('boolean')",
							"    pm.expect(jsonData.bookingdates.checkin).to.be.a('string')",
							"    pm.expect(jsonData.bookingdates.checkin).to.match(/^\\d{4}-\\d{2}-\\d{2}$/)",
							"    pm.expect(jsonData.bookingdates.checkout).to.be.a('string')",
							"    pm.expect(jsonData.bookingdates.checkout).to.match(/^\\d{4}-\\d{2}-\\d{2}$/)",
							"});",
							"",
							"(pm.response.json().additionalneeds === undefined ? pm.test.skip : pm.test)('Customer has additional needs', () => {",
							"        pm.expect(pm.response.json().additionalneeds).to.be.a('string')",
							"});",
							"}",
							"",
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Create a new booking",
			"item": [
				{
					"name": "Create a new booking with JSON",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "25090443-8b2b-47d6-a3cb-69e4e18029f2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0edceb12-3c1e-4a85-9253-98ca9fd9c3f5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"Sally\",\r\n\t\"lastname\" : \"Brown\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"additionalneeds\" : \"Breakfast\",\r\n\t\"bookingdates\" : {\r\n\t\t\"checkin\" : \"2013-02-23\",\r\n\t\t\"checkout\" : \"2014-10-23\"\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new booking with XML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0a811611-149b-48c6-871d-b97ebce69a06",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "64e4f583-4bea-43ab-a531-0f4e5fe0615b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>Sally</firstname>\r\n    <lastname>Brown</lastname>\r\n    <totalprice>111</totalprice>\r\n    <depositpaid>true</depositpaid>\r\n    <additionalneeds>Breakfast</additionalneeds>\r\n    <bookingdates>\r\n        <checkin>2013/02/23</checkin>\r\n        <checkout>2014/10/23</checkout>\r\n    </bookingdates>\r\n</booking>"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dynamically create a new booking with JSON",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "43d442b8-3999-4bfb-a03e-76819ca8bc2f",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://randomuser.me/api/\", (err, res) => {",
									"    var firstname = res.json().results[0].name.first",
									"    var lastname  = res.json().results[0].name.last",
									"    pm.environment.set(\"first_name\", JSON.stringify((_.capitalize(firstname))))",
									"    pm.environment.set(\"last_name\", JSON.stringify((_.capitalize(lastname))))",
									"})",
									"",
									"pm.environment.set(\"total_price\", _.random(0, 1000))",
									"",
									"const depositPaid = [true, false]",
									"pm.environment.set(\"depositPaid\", _.shuffle(depositPaid)[0])",
									"",
									"const moment = require('moment')",
									"pm.environment.set(\"check_in\", JSON.stringify(moment().format('YYYY-MM-DD')))",
									"pm.environment.set(\"check_out\", JSON.stringify(moment().add(_.random(1, 14), 'days').format('YYYY-MM-DD')))",
									"",
									"const items = [\"None\", \"Breakfast\", \"Lunch\", \"Dinner\", \"Late Checkout\", \"Newspaper\", \"Extra Pillow\"]",
									"pm.environment.set(\"additional_needs\", JSON.stringify(_.shuffle(items)[0]))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e547b139-c3e2-4d12-ae9b-4a89606d8bf0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									"function cleanup() {",
									"    const clean = ['first_name', 'last_name', 'total_price', 'depositPaid', 'check_in', 'check_out', 'additional_needs']",
									"    for(let i = 0; i < clean.length; ++i){",
									"        pm.environment.unset(clean[i])",
									"    }",
									"}",
									"cleanup()",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"firstname\" : {{first_name}},\r\n\t\"lastname\" : {{last_name}},\r\n\t\"totalprice\" : {{total_price}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"additionalneeds\" : {{additional_needs}},\r\n\t\"bookingdates\" : {\r\n\t\t\"checkin\" : {{check_in}},\r\n\t\t\"checkout\" : {{check_out}}\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dynamically create a new booking with XML",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d79d415a-a092-4223-bff5-e1f106af8b64",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest(\"https://randomuser.me/api/\", (err, res) => {",
									"    var firstname = res.json().results[0].name.first",
									"    var lastname  = res.json().results[0].name.last",
									"    pm.environment.set(\"first_name\", JSON.stringify((_.capitalize(firstname))))",
									"    pm.environment.set(\"last_name\", JSON.stringify((_.capitalize(lastname))))",
									"})",
									"",
									"pm.environment.set(\"total_price\", _.random(0, 1000))",
									"",
									"const depositPaid = [true, false]",
									"pm.environment.set(\"depositPaid\", _.shuffle(depositPaid)[0])",
									"",
									"const moment = require('moment')",
									"pm.environment.set(\"check_in\", JSON.stringify(moment().format('YYYY-MM-DD')))",
									"pm.environment.set(\"check_out\", JSON.stringify(moment().add(_.random(1, 14), 'days').format('YYYY-MM-DD')))",
									"",
									"const items = [\"None\", \"Breakfast\", \"Lunch\", \"Dinner\", \"Late Checkout\", \"Newspaper\", \"Extra Pillow\"]",
									"pm.environment.set(\"additional_needs\", JSON.stringify(_.shuffle(items)[0]))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d5d0dcd2-75eb-4f30-b57d-7eb0505d2e2c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
									"",
									"function cleanup() {",
									"    const clean = ['first_name', 'last_name', 'total_price', 'depositPaid', 'check_in', 'check_out', 'additional_needs']",
									"    for(let i = 0; i < clean.length; ++i){",
									"        pm.environment.unset(clean[i])",
									"    }",
									"}",
									"cleanup()",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>{{first_name}}</firstname>\r\n    <lastname>{{last_name}}</lastname>\r\n    <totalprice>{{total_price}}</totalprice>\r\n    <depositpaid>{{depositPaid}}</depositpaid>\r\n    <additionalneeds>{{additional_needs}}</additionalneeds>\r\n    <bookingdates>\r\n        <checkin>{{check_in}}</checkin>\r\n        <checkout>{{check_out}}</checkout>\r\n    </bookingdates>\r\n</booking>"
						},
						"url": {
							"raw": "{{baseURL}}/booking",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f408567f-b7fa-4051-8db4-1e61cc569c37",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c5859bca-6e8f-4ab8-bc07-78c747854dd8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}